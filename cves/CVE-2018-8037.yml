CVE: CVE-2018-8037

nickname_instructions: |
  Nickname is optional. Provide a useful, professional, and catchy nickname for
  this vulnerability. Ideally fewer than 30 characters. This will be shown
  alongside its CVE to make it more easily distinguished from the rest.
nickname:

CWE_instructions: |
  Please go to cwe.mitre.org and find the most specific, appropriate CWE entry
  that describes your vulnerability. (Tip: this may not be a good one to start
  with - spend time understanding this vulnerability before making your choice!)
CWE: 366

curated_instructions: |
  If you are manually editing this file, then you are "curating" it. Set the
  entry below to "true" as soon as you start. This will enable additional
  integrity checks on this file to make sure you fill everything out properly.
  If you are a student, we cannot accept your work as finished unless curated is
  set to true.
curated: true

reported_instructions: |
  Was there a date that this vulnerability was reported to the team? You can
  find this in changelogs, blogs, bug reports, or perhaps the CVE data.
  Please enter your date in YYYY-MM-DD format.
reported: 2018-06-08

announced_instructions: |
  Was there a date that this vulnerability was announced to the world? You can
  find this in changelogs, blogs, bug reports, or perhaps the CVE data.
  Please enter your date in YYYY-MM-DD format.
announced: 2018-07-22

description_instructions: |
  You can get an initial description from the CVE entry on cve.mitre.org. These
  descriptions are a fine start, but they can be kind of jargony.
  Rewrite this description in your own words. Make it interesting and easy to
  read to anyone with some programming experience. We can always pull up the NVD
  description later to get more technical.
  Try to still be specific in your description, but remove Chromium-specific
  stuff. Remove references to versions, specific filenames, and other jargon
  that outsiders to Chromium would not understand. Technology like "regular
  expressions" is fine, and security phrases like "invalid write" are fine to
  keep too.
description: |
  If an async request was completed the same time as the async timeout,
  a race condition existed that could result in a user seeing a response intended for a different user.
  An additional issue was present in connectors that did not correctly track the 
  closure of the connection when an async request was completed by the application and timed out by the container at the same time.
  This could also result in a user seeing a response intended for another user.

  There essentially was a race condition where if the timeout and request were the same,
  undefined behavior and other responses would be observed

bounty_instructions: |
  If you came across any indications that a bounty was paid out for this
  vulnerability, fill it out here. Or correct it if the information already here
  was wrong. Otherwise, leave it blank.
bounty:
  amt:
  announced:
  url:
bugs: []
fixes_vcc_instructions: |
  Please put the Git commit SHA in "commit" below, and any notes about how this
  was discovered in the "note" field.
  Refer to our instructions on how to find a Git SHA from an SVN revision.
fixes:
- commit: 575cbbcef2875b8cf2871a50c426fe63c05c9d9c
  note: SVN rev 1833825, from the Tomcat website.
- commit: 2692b6e9c2e17b17214418c9ad60856c161ee6f2
  note: SVN rev 1833831, from the Tomcat website.
- commit: 4c04369c287233ea2e8e5135f6c31d02e2d76293
  note: SVN rev 1837530, from the Tomcat website.
- commit: ed4b9d791f9470e4c3de691dd0153a9ce431701b
  note: SVN rev 1833906, from the Tomcat website.
- commit: 71a8b09350a17b15a7c404b1dde8f69abb024c37
  note: SVN rev 1833826, from the Tomcat website.
- commit: 461c7f7a00058e6bf83f3e09fc86d965311861b8
  note: SVN rev 1833832, from the Tomcat website.
- commit: f94eedf02b5973598ab3dbbd4504da588e9ba6cb
  note: SVN rev 1837531, from the Tomcat website.
- commit: ccf2e6bf5205561ad18c2300153e9173ec509d73
  note: SVN rev 1833907, from the Tomcat website.
- commit:
  note:
vccs:
- commit: a6c64efe64349b4af9cb9c035c5bf251a10c77f6
  note: |
    They moved async data into AbstractProcessor but failed to implement correctly.
    Notice it was not a simple refactoring but a bad reimplementation
- commit: 8460d7712dcbb72e3d4f2f8ebb9a26fc4e9ddcf9
  note: They were working on a fix for multiple attempts to close same socket at the
    time

- :commit: 0921457dd389e45e4db51301fbb7b52320713496
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 57ca199223ff16cbcf4cc8237385078cb943087f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: f89d5ae7aa33bd8c505d3f9f1ead0012b6aef2c1
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: e67a33f15d980cba3efbb272985b610a7609e686
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 74fb729a36cbab86afa1b409e009a03db73ebe62
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5af72c3095110aa116fe0b68df4dfd033330aa29
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b78b482ad32eee92a1c1ff4440ac6f9b27c9f480
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d9922467bb1498ff500c27d58b3c72fa17729be1
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5355ac8a83266af4b8c27ce04445162fb496de27
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 9f6d54af865af65c85ee7aacbd5fe44f66493b17
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c162d1ee2249a5ca69c6716ec98d5389b8f336fa
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 71a8b09350a17b15a7c404b1dde8f69abb024c37
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 59920131dc5a262ebbfb40954e67d11c5984ee63
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1bc69a9b0e271c7dc97afddae03086ee6d9a94e8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 0c817d19caef6b399e6695ceabefe679c2346d3e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a8f8d04566997c60a520fde126b4718847c6767f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5094f753ee6dfb6c01b9f46b786d9c8ccec148c5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a15c5503af71daa9037a07d3c3e8dd2f41d0448d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 01f5b7a881b0d68900363b6be6c775d4f698564e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c862a4cf2df2c8e213c9bb231a7cde10304ba9ed
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3725fb129a7a016b0c1516ebb953813b7a6ed463
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b013f655e14f79e5cbe1b975c8dbdad04006f97c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 98af10259899e472570749c1ee0062231a328ba7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2692b6e9c2e17b17214418c9ad60856c161ee6f2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4c18f70eb97525b1c1d5dae316493bbf889085f0
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d31cfc4af316605d2c57128574771957a4efd41a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: fa07eda0c88da80407feae551d5e6aea0a50541f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 461c7f7a00058e6bf83f3e09fc86d965311861b8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3fbac9d5cdc0ccee893949711445a0efd157ec3d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2eac02669598b7eb8532023f30188391053c82a7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 96b50ec866e714f0956ead1a51a6c0f2b7419925
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8e5d0a0560de11502a5b7fb619b9d4b1fa4f4230
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 464af9303ba479217dea856b881c826a86989cad
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d6088b055ab7b12fa923545d1f953629f22f4e4f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8b7d29b23af260b6de02cc2d4efed5919e9b574b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2b8742d423f9969e4e7c0e7c4dbe84c640104876
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4cdb498c1fb424864a2b52b07382c1631cae9a70
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 828d3a7d14843802741b214b3789a1c2a0e5f1c8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c50d6fcce237108d5b1905a1b21a8ab19e1b283c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5969fbb8dcd147783372ece1b6b7486e8447e3f1
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: fb3d73bed2af82628df4d79fed2d2ecf3eba88b6
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1d2d9e85c1a5b68404aff4b1a3f29fff3bad39b7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1ed7d6f95f22ca071ae1ec78f0c073f44e08f88b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 9c950eec1cce635e99b5837279730868521d3e5f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3348dbe8b6c86b2fba9388e115c1d3a64c167a51
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1f10fa6191a02135dd5a6a11e80733b8e0a173b8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ^a84fabcbc6fee8a69253ad92a304b4718e96a7c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 47c9fd10202ae1cae6829b16fc38481e5df7012c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5bbbcb1f8ca224efeb8e8308089817e30e4011aa
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2b239e1ea0f3f8b5cdf01062a106ade9465756ec
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: f61ebefcfa980b5f004299fd21bec067f7768862
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: f48ea1799bc356c8f642f208ed99353d3c9d3b32
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ef5a45e8f39828e0f37e857f2cbb63a6506a07b8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: bf5c4a875b0d3ac0f03dca773aa47d0b6b9ad625
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 633303a5faef2d0f8f46c853296c4c310a46d558
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 332877b4a6bc1d6fff287bc380111db28cea3030
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 91b6c69052b68aa2632d8d4f500699601b98f626
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: af496aebb02196a1d1d3373b271b3f6330a6c4a5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: cddac728a73f3f486c0a29b241ff4d6ab90127c0
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: e6dc7006c97032e6d1db46649915002f642c9a26
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3679eedbab00f847b7e8eddfba4ec8d2bbb74be4
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8a2d1d79deb5dbcb79fdf64d94b3eae158d95a19
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1503dcac7939116318c328c83368c1b4aed2cb14
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 575cbbcef2875b8cf2871a50c426fe63c05c9d9c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6f4a955e5f9457ac52289963aaaa37e043db2427
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 93f2fd9fdfb47ecb12eed17761a7860818025ca0
  :note: This VCC was automatically discovered by the archeogit tool
incomplete_fix_instructions: |
  Did the above "fixes" actually fix the vulnerability?
  Please list any fix commits for this vulnerability that had to be corrected
  at a later date.
incomplete_fixes:
- commit: b4ad8fa8e03b870ee320ac3239059abc08fe1f58
  note: They just needed to include in-flight async requests
- commit:
  note:

upvotes_instructions: |
  Students: when initially writing this, ignore this upvotes number.
  Once this work is being reviewed, you will be giving a certain amount of
  upvotes to each vulnerability you see. Your peers will tell you how
  interesting they think this vulnerability is, and you'll add that to the
  upvotes score on your branch.
upvotes:

unit_tested:
  question: |
    Were automated unit tests involved in this vulnerability?
    Was the original code unit tested, or not unit tested? Did the fix involve
    improving the automated tests?
    Write the reasoning behind your answer in the "answer" field.
    For the "code" answer below, look not only at the fix but the surrounding
    code near the fix and determine if and was there were unit tests involved
    for this module. Must be just "true" or "false".
    For the "fix" answer below, check if the fix for the vulnerability involves
    adding or improving an automated test to ensure this doesn't happen again.
    Must be just "true" or "false".
  answer: |
    There were no visible automated unit tests or tests.
  code: false
  fix: false

discovered:
  question: |
    How was this vulnerability discovered?
    Go to the bug report and read the conversation to find out how this was
    originally found.
    * Answer in longform below in "answer"
    * Fill in the date in YYYY-MM-DD
    * If it's clear that the vulnerability was discovered by a contest,
      fill in the name there.
    * The "automated" flag can be true, false, or nil.
    If there is no evidence as to how this vulnerability was found, then you
    may leave the entries blank except for "answer", BUT please write down
    where you looked in "answer".
  answer: Apache Mail Archives
  date:
  automated:
  contest:

subsystem:
  question: |
    What subsystems was the mistake in?
    Look at the path of the source code files code that were fixed to get
    directory names. Look at comments in the code. Look at the bug reports how
    the bug report was tagged.
    Examples: "clipboard", "gpu", "ssl", "speech", "renderer"
  answer: Based on the description in the CVE and blog post.
  name: apache.cayote

interesting_commits:
  question: |
    Are there any interesting commits between your VCC(s) and fix(es)?
    Write a brief (under 100 words) description of why you think this commit was
    interesting in light of the lessons learned from this vulnerability. Any
    emerging themes?
    If there are no interesting commits, demonstrate that you completed this
    section by explaining what happened between the VCCs and the fix.
  answer:
  commits:
  - commit: 0bdf1daf4e270dcb52bf7d8c884ebc62963c076e
    note: |
      Improved the handling of exceptions during TLS handshakes which may have
      logged our errors.
  - commit: fdfe1e8cfba27c0281e2848df049cfb0962c0c3a
    note: Also a bug fix with connectors. Seems like connectors are a reoccuring issue.

lessons:
  question: |
    Are there any common lessons we have learned from class that apply to this
    vulnerability? In other words, could this vulnerability serve as an example
    of one of those lessons?
    Leave "applies" blank or put false if you did not see that lesson (you do
    not need to put a reason). Put "true" if you feel the lesson applies and put
    a quick explanation of how it applies.
    Don't feel the need to claim that ALL of these apply, but it's pretty likely
    that one or two of them apply.
    If you think of another lesson we covered in class that applies here, feel
    free to give it a small name and add one in the same format as these.
  defense_in_depth:
    applies: true
    note: |
      The vunerability could have had much more validation in depth.
      If it had more layers, it may have prevented the wrong requests.
  least_privilege:
    applies:
    note:
  frameworks_are_optional:
    applies:
    note:
  native_wrappers:
    applies:
    note:
  distrust_input:
    applies:
    note:
  security_by_obscurity:
    applies:
    note:
  serial_killer:
    applies:
    note:
  environment_variables:
    applies:
    note:
  secure_by_default:
    applies:
    note:
  yagni:
    applies:
    note:
  complex_inputs:
    applies:
    note:

mistakes:
  question: |
    In your opinion, after all of this research, what mistakes were made that
    led to this vulnerability? Coding mistakes? Design mistakes?
    Maintainability? Requirements? Miscommunications?
    Look at the CWE entry for this vulnerability and examine the mitigations
    they have written there. Are they doing those? Does the fix look proper?
    Use those questions to inspire your answer. Don't feel obligated to answer
    every one. Write a thoughtful entry here that those ing the software
    engineering industry would find interesting.
  answer: |
    The coding mistake was not accounting for the undefined edge case where an async
    request was completed at the same time as an async timeout.
    The fixes are proper and account for async behavior.
    It is interesting that most of the code for this bug/bug fix and the surrounding code
    is written by one man. He must of missed this condition. Making sure that other async code that exists
    in tomcat covers the async race condition is crucial to prevent similar bugs in the future.
